# ==> Ex01 — Введение в tf2 <==
sudo apt update
sudo apt-get upgrade
sudo apt install ros-humble-turtle-tf2-py ros-humble-tf2-tools

mkdir -p ~/ros2_ws/ex01
cd ~/ros2_ws/ex01

# в первом терменале симуляция
source /opt/ros/humble/setup.bash
ros2 launch turtle_tf2_py turtle_tf2_demo.launch.py

# в третьем управление
source /opt/ros/humble/setup.bash
ros2 run turtlesim turtle_teleop_key

# во втором
# дерево трансформаций
source /opt/ros/humble/setup.bash
ros2 run tf2_tools view_frames --output ~/ros2_ws/ex01/frames.pdf

# сбор трансформаций 
ros2 run tf2_ros tf2_echo turtle1 turtle2 > ~/ros2_ws/ex01/transform.txt

# <<< и двигаем черепаху клавишами для сбора данных потом ctrl+c




# ==> Ex02 — Написание вещателя и слушателя tf2 <==
cd ~/ros2_ws/src

ros2 pkg create tf22 --build-type ament_python --dependencies rclpy geometry_msgs turtlesim tf2_ros tf_transformations

# RViz конфигурируем в rviz/carrot.rviz

colcon build
source install/setup.bash

ros2 launch tf22 carrot_tf2_demo.launch.py radius:=2.0 direction_of_rotation:=-1

ros2 run turtlesim turtle_teleop_key




# ==> Ex02b — Написание вещателя и слушателя tf2 <==
ros2 launch tf2b multi_target_demo.launch.py
ros2 run turtlesim turtle_teleop_key




# ==> Ex03 — Путешествие во времени с помощью tf2 <==
ros2 launch ex03 time_travel.launch.py delay:=3.0
ros2 run turtlesim turtle_teleop_key



